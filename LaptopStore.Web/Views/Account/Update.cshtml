@model LaptopStore.Data.Models.Account
@{
    ViewBag.Title = "Sửa thông tin tài khoản";
}

@section AccountUpdateJS{
<script type='text/javascript'>
    function UpdateAccount(id) {
        const accountData ={
            Id:id,
            Username:$('#username').val(),
            Password:$('#password').val(),
            FullName:$('#fullname').val(),
            Gender:$('#gender').val()?Number($('#gender').val()):null,
            AccountType:$('#accountType').val()?Number($('#accountType').val()):null,
            Address:$('#address').val(),
        }
        $.ajax({
            url: '/Account/UpdateAccount/'+id, // Thay 'TenController' bằng tên controller của bạn
            type: 'PUT', // Hoặc 'GET' tùy vào cách bạn đã cấu hình action Xoa trong controller
            contentType: 'application/json',
            data: JSON.stringify(accountData),
            success: function(result) {
                // Xử lý kết quả sau khi xóa, nếu cần
                alert('Cập nhật thành công');
                // Cập nhật lại giao diện nếu cần
                window.location.href = '/Account';
            },
            error: function(xhr, status, error) {
                // Xử lý lỗi nếu có
                console.error(error);
            }
        });
    }
</script>
}

<div class="row">
    <div class="col">
        <h2 class="text-info">Sửa thông tin tài khoản</h2>
        <hr />
        <div class="col-md-12">

            @*@Html.AntiForgeryToken()*@
            <div class="row mb-2">
                <div id="msg">
                </div>
            </div>
            <div class="row g-3">
                <div class="col-md-6">
                    @Html.LabelFor(x => x.Username, new { @class = "form-label fs-4" })
                    @Html.TextBoxFor(x => x.Username, new { @class = "form-control fs-4", @id="username" })
                    @Html.ValidationMessageFor(x => x.Username, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(x => x.Password, new { @class = "form-label fs-4" })
                    @Html.TextBoxFor(x => x.Password, new { @class = "form-control fs-4" , @id="password"})
                    @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(x => x.FullName, new { @class = "form-label fs-4" })
                    @Html.TextBoxFor(x => x.FullName, new { @class = "form-control fs-4" , @id="fullname"})
                    @*@Html.EditorFor(x => x.FullName, new { htmlAttributes = new { @class = "form-control fs-4", @id="fullname" }, Type = "date" })*@
                    @Html.ValidationMessageFor(x => x.FullName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(x => x.Gender, new { @class = "form-label fs-4" })
                    @Html.DropDownList("Gender", new List<SelectListItem>() {
                    new SelectListItem(){Text="Male",Value="0"},
                    new SelectListItem(){Text="Female",Value="1"}
                    }, "--Chọn giới tính--", new { @class = "form-control fs-4", @id="gender" })
                    @Html.ValidationMessageFor(x => x.Gender, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(x => x.AccountType, new { @class = "form-label fs-4" })
                    @Html.DropDownList("AccountType", new List<SelectListItem>() {
                    new SelectListItem(){Text="Admin",Value="0"},
                    new SelectListItem(){Text="Nhân viên",Value="1"}
                    }, "--Chọn Loại tài khoản", new{@class = "form-control fs-4", @id="accountType" })
                    @Html.ValidationMessageFor(x => x.AccountType, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(x => x.Address, new { @class = "form-label fs-4" })
                    @Html.TextAreaFor(x => x.Address, new { @class = "form-control fs-4", @id="address"})
                    @Html.ValidationMessageFor(x => x.Address, "", new { @class = "text-danger" })
                </div>
                @* <div class="col-md-6">
                    @Html.LabelFor(x => x.Picture, new { @class = "form-label fs-4" })
                    @Html.TextBoxFor(x => x.Picture, new { @class = "form-control fs-4", Type = "file" })
                    @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
                    </div>*@
            </div>

            <div class="col-md-12 d-flex justify-content-lg-end mt-2">
                <button class="btn btn-success btn-lg col-4" onclick="UpdateAccount('@Model.Id')">Lưu</button>
            </div>


            <div class="col-md-12 d-flex justify-content-lg-start mt-2">
                <a href="@Url.Action("Index", "Account")" class="btn btn-danger btn-sm fs-4"><i class="fa-regular fa-hand-back-point-left"></i> Trở về danh sách</a>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @*<script src="~/Content/JS/jquery-3.6.0.js"></script>*@
<script src="~/lib/jquery/dist/jquery.js"></script>
    @*<script src="~/Content/JS/jquery.validate.js"></script>*@
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    @*<script src="~/Content/JS/jquery.validate.unobtrusive.js"></script>*@
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    @*<script src="~/Content/JS/jquery.unobtrusive-ajax.js"></script>*@
<script>
    $("#form0").attr("enctype", "multipart/form-data")

    function clearAll() {
        $("#form0").trigger("reset");
    }
</script>


}